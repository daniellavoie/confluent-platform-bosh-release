<% servers = link('confluent-server') %>
#
# Copyright 2018 Confluent Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# The address the socket server listens on.
#   FORMAT:
#     listeners = listener_name://host_name:port
#   EXAMPLE:
#     listeners = PLAINTEXT://your.host.name:9092
listeners=http://<%= spec.address %>:<%= p("listen_port") %>

# Zookeeper connection string for the Zookeeper cluster used by your Kafka cluster
# (see zookeeper docs for details).
# This is a comma separated host:port pairs, each corresponding to a zk
# server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".
#kafkastore.connection.url=localhost:2181

# Alternatively, Schema Registry can now operate without Zookeeper, handling all coordination via
# Kafka brokers. Use this setting to specify the bootstrap servers for your Kafka cluster and it
# will be used both for selecting the master schema registry instance and for storing the data for
# registered schemas.
# (Note that you cannot mix the two modes; use this mode only on new deployments or by shutting down
# all instances, switching to the new configuration, and then starting the schema registry
# instances again.)
<% 
listen_port = servers.p('listen_port')
security_protocol = servers.p("tls.certificate", nil).nil? ? "PLAINTEXT" : "SSL" 
if servers.p("enable_sasl_scram")
  security_protocol = "SASL_" + security_protocol
end
%>
kafkastore.bootstrap.servers=<%= security_protocol %>://<%= servers.instances.map { |instance| "#{instance.address}:#{listen_port}" }.join(",") %>

# The name of the topic to store schemas in
kafkastore.topic=<%= p("topic") %>

# If true, API requests that fail will include extra debugging information, including stack traces
debug=<%= p("debug") %>
